import { createStore } from 'vuex'

export default createStore({
  state() {
    return {
      user: null,
      isLoggedIn: false,
      cart: [],
      categories: [],
      products: [],
      banners: []
    }
  },
  mutations: {
    setUser(state, user) {
      state.user = user
      state.isLoggedIn = !!user
    },
    setCategories(state, categories) {
      state.categories = categories
    },
    setProducts(state, products) {
      state.products = products
    },
    setBanners(state, banners) {
      state.banners = banners
    },
    addToCart(state, product) {
      const existItem = state.cart.find(item => item.id === product.id)
      if (existItem) {
        existItem.quantity += 1
      } else {
        state.cart.push({
          ...product,
          quantity: 1
        })
      }
    },
    removeFromCart(state, productId) {
      state.cart = state.cart.filter(item => item.id !== productId)
    }
  },
  actions: {
    login({ commit }, credentials) {
      // 实际项目中这里会调用登录API
      return new Promise((resolve) => {
        setTimeout(() => {
          const user = {
            id: 1,
            name: '管理员',
            email: 'admin@example.com',
            role: 'admin'
          }
          commit('setUser', user)
          localStorage.setItem('isAdmin', 'true')
          resolve(user)
        }, 1000)
      })
    },
    logout({ commit }) {
      commit('setUser', null)
      localStorage.removeItem('isAdmin')
    },
    fetchCategories({ commit }) {
      // 实际项目中这里会调用API
      return new Promise((resolve) => {
        setTimeout(() => {
          const categories = [
            { id: 1, name: '发动机配件', code: 'engine' },
            { id: 2, name: '底盘配件', code: 'chassis' },
            { id: 3, name: '电器配件', code: 'electrical' },
            { id: 4, name: '车身配件', code: 'body' }
          ]
          commit('setCategories', categories)
          resolve(categories)
        }, 500)
      })
    },
    fetchProducts({ commit }) {
      // 实际项目中这里会调用API
      return new Promise((resolve) => {
        setTimeout(() => {
          const products = [
            // 产品数据
          ]
          commit('setProducts', products)
          resolve(products)
        }, 500)
      })
    },
    fetchBanners({ commit }) {
      // 实际项目中这里会调用API
      return new Promise((resolve) => {
        setTimeout(() => {
          const banners = [
            // 轮播图数据
          ]
          commit('setBanners', banners)
          resolve(banners)
        }, 500)
      })
    }
  },
  getters: {
    isAuthenticated: state => !!state.user,
    isAdmin: state => state.user && state.user.role === 'admin',
    cartItemCount: state => state.cart.reduce((total, item) => total + item.quantity, 0)
  }
})